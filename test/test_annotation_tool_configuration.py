# coding: utf-8

"""
    MetaboScape REST Application

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2025b
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from metaPyScape.models.annotation_tool_configuration import AnnotationToolConfiguration

class TestAnnotationToolConfiguration(unittest.TestCase):
    """AnnotationToolConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnnotationToolConfiguration:
        """Test AnnotationToolConfiguration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnnotationToolConfiguration`
        """
        model = AnnotationToolConfiguration()
        if include_optional:
            return AnnotationToolConfiguration(
                id = '',
                name = '',
                scoring_configuration = metaPyScape.models.scoring_configuration.ScoringConfiguration(
                    mz_wide = 1.337, 
                    mz_narrow = 1.337, 
                    mz_unit = 'DA', 
                    rt_in_seconds_narrow = 1.337, 
                    rt_in_seconds_wide = 1.337, 
                    ms_ms_wide = 1.337, 
                    ms_ms_narrow = 1.337, 
                    ccs_wide = 1.337, 
                    ccs_narrow = 1.337, 
                    msigma_narrow = 1.337, 
                    msigma_wide = 1.337, )
            )
        else:
            return AnnotationToolConfiguration(
        )
        """

    def testAnnotationToolConfiguration(self):
        """Test AnnotationToolConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
